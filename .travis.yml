sudo: required

language: python

dist: xenial

python:
  - "3.6"

services:
  - docker

notifications:
  email: false

branches:
  only:
    - develop
    - /^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$/

before_install:
  # Add docker keys
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"

install:
  # Install last docker
  - sudo apt-get update
  - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
  # Build docker image
  - docker build -t "$DOCKER_USERNAME"/wordofthedaytelegrambot .
  - echo "$TELEGRAM_TOKEN" > conf/.token
  # run docker container
  - docker run -d --name=wordofthedaytelegrambot
      --mount type=bind,source=$TRAVIS_BUILD_DIR/data/,target=/opt/wordofthedaytelegrambot/data/
      --mount type=bind,source=$TRAVIS_BUILD_DIR/conf/.token,target=/opt/wordofthedaytelegrambot/conf/.token
      --mount type=bind,source=$TRAVIS_BUILD_DIR/logs/,target=/opt/wordofthedaytelegrambot/logs/
      "$DOCKER_USERNAME"/wordofthedaytelegrambot
  - docker ps -a
  - docker stats --no-stream

before_script:
  # Install flake for quality gate
  - pip install flake8

script:
  # Run quality gate test
  - flake8 . --max-line-length=120

after_success:
  - echo SUCCESS

before_deploy:
  # Login to docker
  - echo "$DOCKER_PASSWORD" | docker login -u="$DOCKER_USERNAME" --password-stdin;

deploy:
  # Update online image as nightly
  - provider: script
    script: bash scripts/develop-deploy.sh
    on:
      branch: develop

  # Update online image tagging it
  - provider: script
    script: bash scripts/master-deploy.sh
    on:
        branch: master
        condition: $TRAVIS_TAG = "^v([0-9]+)\.([0-9]+)\.([0-9]+)(?:-([0-9A-Za-z-]+(?:\.[0-9A-Za-z-]+)*))?(?:\+[0-9A-Za-z-]+)?$"
